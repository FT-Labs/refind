#!/bin/bash

source /usr/share/refind/refind-auto/refind || [[ $(echo "Can't find /usr/share/refind/refind-auto/refind, please check again" && exit 1) ]]
ESP=$(cat /etc/fstab | awk '{print $1}' | grep "EFI" | sed 's|EFI.*||g')
OS_DISTRIBUTOR=$(cat /etc/fstab | awk '{print $1}' | sed '/\#/d' | grep "EFI" | tr "/" " " | awk '{print $NF}' )
BOOT="EFI/refind"
[[ -z $ICONS ]] && ICONS="icons" || ICONS="icons/icons-$ICONS"

if [[ $CHECK_UCODE = "true" ]]; then
    _ucode=$(ls /boot | grep ucode 2>/dev/null)
    if [[ $_ucode = "amd-ucode.img" ]]; then
        ucode='initrd=\\amd-ucode.img'
    elif [[ $_ucode = "intel-ucode.img" ]]; then
        ucode='initrd=\\intel-ucode.img'
    fi
fi

generate_menuentry() {
    os_icon=$(echo "$1" | tr [:upper:] [:lower:])

    if [[ $(echo -e "$main_entry" | grep -w "\"$1\"") ]]; then
        main_entry+="\tsubmenuentry \"Boot using $3\" {\n"
        main_entry+="\t\tloader /EFI/$os_icon/$2\n"
        main_entry+="\t\tinitrd /EFI/$os_icon/$3\n"
        main_entry+="\t\toptions \"root=$root rw add_efi_memmap $REFIND_CMDLINE_LINUX_DEFAULT\"\n\t}\n"
    else
        main_entry="menuentry \"$1\" {\n"
        [[ -f $ESP/$BOOT/$ICONS/os_$os_icon.png ]] && main_entry+="\ticon $BOOT/$ICONS/os_$os_icon.png \n"
        main_entry+="\tostype Linux\n"
        main_entry+="\tloader EFI/$os_icon/$2\n"
        main_entry+="\tinitrd EFI/$os_icon/$3\n"
        main_entry+="\toptions \"root=$root rw add_efi_memmap $REFIND_CMDLINE_LINUX $REFIND_CMDLINE_LINUX_DEFAULT $ucode\"\n"
    fi
}

generate_otheros() {
    if [[ $(echo -e "$main_entry" | grep -w "\"$1\"") ]]; then
        main_entry+="\tsubmenuentry \"$1 $3\" {\n"
        main_entry+="\t\tinitrd /EFI/$1/$3 \n\t"
        main_entry+="\toptions \"root=$4 rw add_efi_memmap $REFIND_CMDLINE_LINUX $REFIND_CMDLINE_LINUX_DEFAULT $ucode\"\n\t}\n\t"
    else
        os_icon=$(echo "$1" | tr [:upper:] [:lower:])
        main_entry="\n${main_entry}menuentry \"$1\" {\n"
        [[ -f $ESP/$BOOT/$ICONS/os_$os_icon.png ]] && main_entry+="\ticon $BOOT/$ICONS/os_$os_icon.png \n"
        main_entry+="\tostype Linux\n"
        main_entry+="\tloader EFI/$1/$2\n"
        main_entry+="\tinitrd EFI/$1/$3\n"
        main_entry+="\toptions \"root=$4 rw add_efi_memmap $REFIND_CMDLINE_LINUX $REFIND_CMDLINE_LINUX_DEFAULT $ucode\"\n"
    fi
}

dev=$(mount | grep "/boot " | awk '{print $1}')
root=$(mount | grep -w '/' | awk '{print $1}' | rev | cut -d '/' -f 1 | rev)
is_lvm=$(sudo lvs -o lv_name | awk '{if(NR>1)print}' | tr -d " " | while read lv; do findmnt -l | grep '/dev/\S\+' | awk '{print $2}' | grep $lv; done)

[[ ! -z $is_lvm ]] && root="/dev/mapper/$root" || root="/dev/$root"

kernels=$(ls /boot | grep "vmlinuz" | cut -d "-" -f 2- | sort -r)
DEFAULT_KERNEL="$(echo "$kernels" | grep -wx "$DEFAULT_KERNEL")"
DEFAULT_KERNEL+=\n
[[ -n $DEFAULT_KERNEL ]] && kernels="$DEFAULT_KERNEL$(echo "$kernels" | sed "s/^$DEFAULT_KERNEL\$//")"

for kern in $kernels; do
    loader="vmlinuz-$kern"
    others=$(echo "$kernels" | grep -vx "$kern")
    main_ent=$(ls /boot | grep "initramfs" | grep -v "$others\|*.tmp"  || ls /boot | grep "initrd" | grep -v "$others")
    [[ -z $main_ent ]] && main_ent=$(ls /boot | grep "initramfs" | grep -w "$kern"  || ls /boot | grep "initrd" | grep -w "$kern")
    for ent in $(echo "$main_ent" | tr " " "\n"); do
        generate_menuentry "$OS_DISTRIBUTOR" "$loader" "$ent"
    done
    main_entry+="\n}\n"
done


oses=$(ls /$ESP/EFI | grep -v "refind\|tools\|$OS_DISTRIBUTOR")
_osprober=$(sudo os-prober)

for os in $oses; do
    kernels=$(ls /$ESP/EFI/$os | grep "vmlinuz" | cut -d "-" -f 2- | sort -r)
    for kern in $kernels; do
        loader="vmlinuz-$kern"
        others=$(echo "$kernels" | grep -vx "$kern")
        main_ent=$(ls /$ESP/EFI/$os | grep "initramfs" | grep -v "$others\|*.tmp"  || ls /boot | grep "initrd" | grep -v "$others")
        [[ -z $main_ent ]] && main_ent=$(ls /$ESP/EFI/$os | grep "initramfs" | grep -w "$kern"  || ls /$ESP/EFI/$os | grep "initrd" | grep -w "$kern")
        root=$(echo "$_osprober" | grep -i "$os" | cut -d ":" -f 1)
        for r in $root; do
            generate_otheros "$os" "$loader" "$main_ent" "$r"
        done
    done
    main_entry+="\n}\n"
done

BOOT="$ESP/$BOOT"
echo -e "$main_entry" | sudo tee $BOOT/refind_entries.conf
sudo cp -rf /etc/refind.d/refind.conf $BOOT/refind.conf
echo "include theme/theme.conf" | sudo tee -a $BOOT/refind.conf
[[ ! -z $BIG_ICON_SIZE ]] && echo "big_icon_size $BIG_ICON_SIZE" | sudo tee -a $BOOT/refind.conf
[[ ! -z $SMALL_ICON_SIZE ]] && echo "small_icon_size $SMALL_ICON_SIZE" | sudo tee -a $BOOT/refind.conf
[[ -f "$BOOT/icons/bg.png" ]] && echo "banner icons/bg.png" | sudo tee -a $BOOT/refind.conf
